version: 0.2
phases:
  install:
    commands:
      - if [ -z ".aws-sam/" ]; then rm -r .aws-sam; fi
      - pwd
      - ls -lh 

      - npm uninstall node_modules
      - pwd
      - ls -lh node_modules

      # - if [ -z "node_modules" ]; then rm -r node_modules; fi
      # - pwd
      # - ls -lh node_modules


      # Install all dependencies (including dependencies for running tests)
      - npm install 
      - pwd
      - ls -lh node_modules

  pre_build:
    commands:
      - npm install -g typescript

      - npm install -g esbuild
      - pwd
      - ls -lh

      # Discover and run unit tests in the '__tests__' directory
      #- npm run test

  build:
    commands:
      - tsc --build --noemit ./src/handlers/s3-json-logger.ts --verbose
      - pwd
      - ls -lh

      - npm run build --debug --verbose
      - pwd
      - ls -lh

      - esbuild ./src/handlers/s3-json-logger.ts --out-extension:.js=.mjs --external:'node_modules/aws-sdk/clients/s3.js' --bundle --minify --sourcemap --platform=node --target=es2020 --outfile=./src/handlers/s3-json-logger.js

      - pwd
      - ls -lh
      - ls -lh .aws-sam
      - ls -lh .aws-sam/build
      - ls -lh .aws-sam/build/src

      # - sam build
      # - pwd
      # - ls -lh

      # - cd src/handlers && zip -r s3-json-logger.zip s3-json-logger.js*
      # - cd ../../
      - npm pack

      - rm -r node_modules

      - npm ci --loglevel verbose

      # Remove all dependencies not needed for the Lambda deployment package (the packages from devDependencies in package.json)
      # - npm prune --production --loglevel verbose
      - npm prune --omit=dev --loglevel verbose

      # a- npm install --omit=dev --loglevel verbose
      # - codebuild-breakpoint

      # - pwd
      # - ls -lh

      # Use AWS SAM to package the application by using AWS CloudFormation
      # - aws cloudformation package --debug --template-file template.yml --s3-bucket $S3_BUCKET --output-template-file template-export.yml
      - aws cloudformation package --template-file template.yml --s3-bucket $S3_BUCKET --output-template-file template-export.yml
      # - sam package --template-file template.yml --s3-bucket $S3_BUCKET --output-template-file template-export.yml

      - pwd
      - ls -lh

  post_build:
    commands:
      - ls -lh node_modules

artifacts:
  files:
    - template-export.yml
